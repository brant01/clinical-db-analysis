#!/usr/bin/env python3
"""
NSQIP Analysis Helper Script

Simple wrapper to ensure marimo notebooks always run in sandbox mode.
This protects researchers from dependency conflicts.
"""

import sys
import subprocess
import os
from pathlib import Path

def print_usage():
    """Print usage information."""
    print("""
NSQIP Analysis Helper

Usage:
    ./nsqip edit [notebook]     # Edit a notebook (creates if doesn't exist)
    ./nsqip run [notebook]      # Run a notebook in read-only mode
    ./nsqip new [name]          # Create a new notebook
    ./nsqip help               # Show this message

Examples:
    ./nsqip edit analysis.py
    ./nsqip edit projects/smith-mortality/analysis.py
    ./nsqip run shared/templates/basic_analysis.py
    ./nsqip new exploratory_analysis.py

All commands automatically use sandbox mode for safety.
""")

def main():
    if len(sys.argv) < 2 or sys.argv[1] == "help":
        print_usage()
        sys.exit(0)
    
    command = sys.argv[1].lower()
    
    # Build the marimo command
    if command == "edit":
        if len(sys.argv) < 3:
            print("Error: Please specify a notebook file to edit")
            print("Example: ./nsqip edit analysis.py")
            sys.exit(1)
        
        notebook = sys.argv[2]
        # If no .py extension, add it
        if not notebook.endswith('.py'):
            notebook += '.py'
        
        cmd = ["uv", "run", "marimo", "edit", "--sandbox", notebook]
        
    elif command == "run":
        if len(sys.argv) < 3:
            print("Error: Please specify a notebook file to run")
            print("Example: ./nsqip run analysis.py")
            sys.exit(1)
        
        notebook = sys.argv[2]
        if not notebook.endswith('.py'):
            notebook += '.py'
        
        # Check if file exists
        if not Path(notebook).exists():
            print(f"Error: Notebook '{notebook}' not found")
            sys.exit(1)
        
        cmd = ["uv", "run", "marimo", "run", "--sandbox", notebook]
        
    elif command == "new":
        if len(sys.argv) < 3:
            # Just create new without name
            cmd = ["uv", "run", "marimo", "new", "--sandbox"]
        else:
            name = sys.argv[2]
            if not name.endswith('.py'):
                name += '.py'
            cmd = ["uv", "run", "marimo", "new", "--sandbox"]
            print(f"Note: Will create new notebook. Save as '{name}' when ready.")
    
    else:
        print(f"Error: Unknown command '{command}'")
        print_usage()
        sys.exit(1)
    
    # Run the command
    try:
        print(f"Starting marimo in sandbox mode...")
        subprocess.run(cmd)
    except KeyboardInterrupt:
        print("\nStopping marimo...")
    except Exception as e:
        print(f"Error: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()